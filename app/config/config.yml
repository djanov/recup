imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: services.yml }

# Put parameters here that don't need to change on each machine where the app is deployed
# http://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: en
    cache_type: file_system

framework:
    #esi:             ~
#    translator:      { fallbacks: ["%locale%"] }
    translator: ~
    secret:          "%secret%"
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: ~
    form:            ~
    csrf_protection: ~
    validation:      { enable_annotations: true }
    #serializer:      { enable_annotations: true }
    templating:
        engines: ['twig']
        #assets_version: SomeVersionScheme
    default_locale:  "%locale%"
    trusted_hosts:   ~
    trusted_proxies: ~
    session:
        # handler_id set to null will use default session handler from php.ini
        handler_id:  ~
    fragments:       ~
    http_method_override: true

# Twig Configuration
twig:
    debug:            "%kernel.debug%"
    strict_variables: "%kernel.debug%"

    number_format:
      thousands_separator: ','
    form_themes:
      - bootstrap_3_layout.html.twig
      - 'VichUploaderBundle:Form:fields.html.twig'

# Doctrine Configuration
doctrine:
    dbal:
        driver:   pdo_mysql
        host:     "%database_host%"
        port:     "%database_port%"
        dbname:   "%database_name%"
        user:     "%database_user%"
        password: "%database_password%"
        charset:  UTF8
        # if using pdo_sqlite as your database driver:
        #   1. add the path in parameters.yml
        #     e.g. database_path: "%kernel.root_dir%/data/data.db3"
        #   2. Uncomment database_path in parameters.yml.dist
        #   3. Uncomment next line:
        #     path:     "%database_path%"

    orm:
        auto_generate_proxy_classes: "%kernel.debug%"
        naming_strategy: doctrine.orm.naming_strategy.underscore
        auto_mapping: true

# Swiftmailer Configuration
swiftmailer:
    transport: "%mailer_transport%"
    host:      "%mailer_host%"
    username:  "%mailer_user%"
    password:  "%mailer_password%"
    spool:     { type: memory }


doctrine_cache:
  providers:
    my_markdown_cache:
      type: %cache_type%
      file_system:
        directory: %kernel.cache_dir%/markdown_cache

fos_user:
    db_driver: orm # other valid values are 'mongodb', 'couchdb' and 'propel'
    firewall_name: main
    user_class: RecUp\UserBundle\Entity\User

#  EMAIL: need to make smtp to work in parameters.yml
#  https://www.sitepoint.com/basic-user-management-in-symfony2-with-fosuserbundle/
#
#    from_email:
#        address: admin@recup.com
#        sender_name: djanov
#    registration:
#      confirmation:
#        enabled: true
#        template: FOSUserBundle:Registration:email.txt.twig

knp_menu:
    twig:
        template: UserBundle::knp_menu.html.twig

#    For eamil confirmation later: https://symfony.com/doc/current/bundles/FOSUserBundle/emails.html
#
#    registration:
#            confirmation:
#                enabled: true
#
assetic:
    debug: "%kernel.debug%"
    bundles: ["FOSCommentBundle"]

fos_comment:
    db_driver: orm
    class:
        model:
            comment: RecUp\UserBundle\Entity\Comment
            thread: RecUp\UserBundle\Entity\Thread
    acl: true
    service:
        acl:
            thread:  fos_comment.acl.thread.roles
            comment: fos_comment.acl.comment.roles
            vote:    fos_comment.acl.vote.roles
        manager:
            thread:  fos_comment.manager.thread.acl
            comment: fos_comment.manager.comment.acl
            vote:    fos_comment.manager.vote.acl
    acl_roles:
        comment:
            create: ROLE_USER
            view: ROLE_USER
            edit: ROLE_ADMIN
            delete: ROLE_ADMIN
        thread:
            create: ROLE_USER
            view: ROLE_USER
            edit: ROLE_ADMIN
            delete: ROLE_ADMIN
        vote:
             create: ROLE_ADMIN
             view: ROLE_ADMIN
             edit: ROLE_ADMIN
             delete: ROLE_ADMIN

vich_uploader:
    db_driver: orm
    mappings:
         record_song:
#              namer:              vich_uploader.namer_uniqid
              namer:
                  service:            vich_uploader.namer_property
                  options:            { property: 'songname'}
              uri_prefix:         /record/songs
              upload_destination: %kernel.root_dir%/../web/record/songs

services:
  time_diff.twig.extension:
    class: Twig_Extensions_Extension_Date
    tags:
      - { name: twig.extension}